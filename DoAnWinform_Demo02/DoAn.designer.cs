#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoAnWinform_Demo02
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DOAN02")]
	public partial class DoAnDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietHoaDonCungCap(ChiTietHoaDonCungCap instance);
    partial void UpdateChiTietHoaDonCungCap(ChiTietHoaDonCungCap instance);
    partial void DeleteChiTietHoaDonCungCap(ChiTietHoaDonCungCap instance);
    partial void InsertChiTietHoaDonThanhToan(ChiTietHoaDonThanhToan instance);
    partial void UpdateChiTietHoaDonThanhToan(ChiTietHoaDonThanhToan instance);
    partial void DeleteChiTietHoaDonThanhToan(ChiTietHoaDonThanhToan instance);
    partial void InsertHoaDonCungCap(HoaDonCungCap instance);
    partial void UpdateHoaDonCungCap(HoaDonCungCap instance);
    partial void DeleteHoaDonCungCap(HoaDonCungCap instance);
    partial void InsertHoaDonThanhToan(HoaDonThanhToan instance);
    partial void UpdateHoaDonThanhToan(HoaDonThanhToan instance);
    partial void DeleteHoaDonThanhToan(HoaDonThanhToan instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLichLamViec(LichLamViec instance);
    partial void UpdateLichLamViec(LichLamViec instance);
    partial void DeleteLichLamViec(LichLamViec instance);
    partial void InsertLoaiNguyenLieu(LoaiNguyenLieu instance);
    partial void UpdateLoaiNguyenLieu(LoaiNguyenLieu instance);
    partial void DeleteLoaiNguyenLieu(LoaiNguyenLieu instance);
    partial void InsertNguyenLieu(NguyenLieu instance);
    partial void UpdateNguyenLieu(NguyenLieu instance);
    partial void DeleteNguyenLieu(NguyenLieu instance);
    partial void InsertNhaCungCap(NhaCungCap instance);
    partial void UpdateNhaCungCap(NhaCungCap instance);
    partial void DeleteNhaCungCap(NhaCungCap instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertNhomThucUong(NhomThucUong instance);
    partial void UpdateNhomThucUong(NhomThucUong instance);
    partial void DeleteNhomThucUong(NhomThucUong instance);
    partial void InsertThucUong(ThucUong instance);
    partial void UpdateThucUong(ThucUong instance);
    partial void DeleteThucUong(ThucUong instance);
    partial void InsertPhaChe(PhaChe instance);
    partial void UpdatePhaChe(PhaChe instance);
    partial void DeletePhaChe(PhaChe instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    #endregion
		
		public DoAnDataContext() : 
				base(global::DoAnWinform_Demo02.Properties.Settings.Default.DOAN02ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DoAnDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoAnDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoAnDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoAnDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietHoaDonCungCap> ChiTietHoaDonCungCaps
		{
			get
			{
				return this.GetTable<ChiTietHoaDonCungCap>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietHoaDonThanhToan> ChiTietHoaDonThanhToans
		{
			get
			{
				return this.GetTable<ChiTietHoaDonThanhToan>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonCungCap> HoaDonCungCaps
		{
			get
			{
				return this.GetTable<HoaDonCungCap>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonThanhToan> HoaDonThanhToans
		{
			get
			{
				return this.GetTable<HoaDonThanhToan>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LichLamViec> LichLamViecs
		{
			get
			{
				return this.GetTable<LichLamViec>();
			}
		}
		
		public System.Data.Linq.Table<LoaiNguyenLieu> LoaiNguyenLieus
		{
			get
			{
				return this.GetTable<LoaiNguyenLieu>();
			}
		}
		
		public System.Data.Linq.Table<NguyenLieu> NguyenLieus
		{
			get
			{
				return this.GetTable<NguyenLieu>();
			}
		}
		
		public System.Data.Linq.Table<NhaCungCap> NhaCungCaps
		{
			get
			{
				return this.GetTable<NhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<NhomThucUong> NhomThucUongs
		{
			get
			{
				return this.GetTable<NhomThucUong>();
			}
		}
		
		public System.Data.Linq.Table<ThucUong> ThucUongs
		{
			get
			{
				return this.GetTable<ThucUong>();
			}
		}
		
		public System.Data.Linq.Table<PhaChe> PhaChes
		{
			get
			{
				return this.GetTable<PhaChe>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHoaDonCungCap")]
	public partial class ChiTietHoaDonCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNL;
		
		private string _MaHD;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<double> _DonGia;
		
		private EntityRef<HoaDonCungCap> _HoaDonCungCap;
		
		private EntityRef<NguyenLieu> _NguyenLieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNLChanging(string value);
    partial void OnMaNLChanged();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(System.Nullable<double> value);
    partial void OnDonGiaChanged();
    #endregion
		
		public ChiTietHoaDonCungCap()
		{
			this._HoaDonCungCap = default(EntityRef<HoaDonCungCap>);
			this._NguyenLieu = default(EntityRef<NguyenLieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNL", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNL
		{
			get
			{
				return this._MaNL;
			}
			set
			{
				if ((this._MaNL != value))
				{
					if (this._NguyenLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNLChanging(value);
					this.SendPropertyChanging();
					this._MaNL = value;
					this.SendPropertyChanged("MaNL");
					this.OnMaNLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HoaDonCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float")]
		public System.Nullable<double> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonCungCap_ChiTietHoaDonCungCap", Storage="_HoaDonCungCap", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HoaDonCungCap HoaDonCungCap
		{
			get
			{
				return this._HoaDonCungCap.Entity;
			}
			set
			{
				HoaDonCungCap previousValue = this._HoaDonCungCap.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonCungCap.Entity = null;
						previousValue.ChiTietHoaDonCungCaps.Remove(this);
					}
					this._HoaDonCungCap.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonCungCaps.Add(this);
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(string);
					}
					this.SendPropertyChanged("HoaDonCungCap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguyenLieu_ChiTietHoaDonCungCap", Storage="_NguyenLieu", ThisKey="MaNL", OtherKey="MaNL", IsForeignKey=true)]
		public NguyenLieu NguyenLieu
		{
			get
			{
				return this._NguyenLieu.Entity;
			}
			set
			{
				NguyenLieu previousValue = this._NguyenLieu.Entity;
				if (((previousValue != value) 
							|| (this._NguyenLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguyenLieu.Entity = null;
						previousValue.ChiTietHoaDonCungCaps.Remove(this);
					}
					this._NguyenLieu.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonCungCaps.Add(this);
						this._MaNL = value.MaNL;
					}
					else
					{
						this._MaNL = default(string);
					}
					this.SendPropertyChanged("NguyenLieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHoaDonThanhToan")]
	public partial class ChiTietHoaDonThanhToan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaThucUong;
		
		private string _MaHD;
		
		private System.Nullable<int> _SoLuong;
		
		private EntityRef<HoaDonThanhToan> _HoaDonThanhToan;
		
		private EntityRef<ThucUong> _ThucUong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThucUongChanging(string value);
    partial void OnMaThucUongChanged();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public ChiTietHoaDonThanhToan()
		{
			this._HoaDonThanhToan = default(EntityRef<HoaDonThanhToan>);
			this._ThucUong = default(EntityRef<ThucUong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThucUong", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaThucUong
		{
			get
			{
				return this._MaThucUong;
			}
			set
			{
				if ((this._MaThucUong != value))
				{
					if (this._ThucUong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaThucUongChanging(value);
					this.SendPropertyChanging();
					this._MaThucUong = value;
					this.SendPropertyChanged("MaThucUong");
					this.OnMaThucUongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HoaDonThanhToan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonThanhToan_ChiTietHoaDonThanhToan", Storage="_HoaDonThanhToan", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HoaDonThanhToan HoaDonThanhToan
		{
			get
			{
				return this._HoaDonThanhToan.Entity;
			}
			set
			{
				HoaDonThanhToan previousValue = this._HoaDonThanhToan.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonThanhToan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonThanhToan.Entity = null;
						previousValue.ChiTietHoaDonThanhToans.Remove(this);
					}
					this._HoaDonThanhToan.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonThanhToans.Add(this);
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(string);
					}
					this.SendPropertyChanged("HoaDonThanhToan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThucUong_ChiTietHoaDonThanhToan", Storage="_ThucUong", ThisKey="MaThucUong", OtherKey="MaThucUong", IsForeignKey=true)]
		public ThucUong ThucUong
		{
			get
			{
				return this._ThucUong.Entity;
			}
			set
			{
				ThucUong previousValue = this._ThucUong.Entity;
				if (((previousValue != value) 
							|| (this._ThucUong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThucUong.Entity = null;
						previousValue.ChiTietHoaDonThanhToans.Remove(this);
					}
					this._ThucUong.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonThanhToans.Add(this);
						this._MaThucUong = value.MaThucUong;
					}
					else
					{
						this._MaThucUong = default(string);
					}
					this.SendPropertyChanged("ThucUong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonCungCap")]
	public partial class HoaDonCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private string _MaNCC;
		
		private EntitySet<ChiTietHoaDonCungCap> _ChiTietHoaDonCungCaps;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnMaNCCChanging(string value);
    partial void OnMaNCCChanged();
    #endregion
		
		public HoaDonCungCap()
		{
			this._ChiTietHoaDonCungCaps = new EntitySet<ChiTietHoaDonCungCap>(new Action<ChiTietHoaDonCungCap>(this.attach_ChiTietHoaDonCungCaps), new Action<ChiTietHoaDonCungCap>(this.detach_ChiTietHoaDonCungCaps));
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="Char(10)")]
		public string MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonCungCap_ChiTietHoaDonCungCap", Storage="_ChiTietHoaDonCungCaps", ThisKey="MaHD", OtherKey="MaHD")]
		public EntitySet<ChiTietHoaDonCungCap> ChiTietHoaDonCungCaps
		{
			get
			{
				return this._ChiTietHoaDonCungCaps;
			}
			set
			{
				this._ChiTietHoaDonCungCaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_HoaDonCungCap", Storage="_NhaCungCap", ThisKey="MaNCC", OtherKey="MaNCC", IsForeignKey=true)]
		public NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.HoaDonCungCaps.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.HoaDonCungCaps.Add(this);
						this._MaNCC = value.MaNCC;
					}
					else
					{
						this._MaNCC = default(string);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDonCungCaps(ChiTietHoaDonCungCap entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonCungCap = this;
		}
		
		private void detach_ChiTietHoaDonCungCaps(ChiTietHoaDonCungCap entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonThanhToan")]
	public partial class HoaDonThanhToan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private string _MaKH;
		
		private string _MaNV;
		
		private EntitySet<ChiTietHoaDonThanhToan> _ChiTietHoaDonThanhToans;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    #endregion
		
		public HoaDonThanhToan()
		{
			this._ChiTietHoaDonThanhToans = new EntitySet<ChiTietHoaDonThanhToan>(new Action<ChiTietHoaDonThanhToan>(this.attach_ChiTietHoaDonThanhToans), new Action<ChiTietHoaDonThanhToan>(this.detach_ChiTietHoaDonThanhToans));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Char(10)")]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Char(10)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonThanhToan_ChiTietHoaDonThanhToan", Storage="_ChiTietHoaDonThanhToans", ThisKey="MaHD", OtherKey="MaHD")]
		public EntitySet<ChiTietHoaDonThanhToan> ChiTietHoaDonThanhToans
		{
			get
			{
				return this._ChiTietHoaDonThanhToans;
			}
			set
			{
				this._ChiTietHoaDonThanhToans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDonThanhToan", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.HoaDonThanhToans.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.HoaDonThanhToans.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonThanhToan", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDonThanhToans.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDonThanhToans.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDonThanhToans(ChiTietHoaDonThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonThanhToan = this;
		}
		
		private void detach_ChiTietHoaDonThanhToans(ChiTietHoaDonThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonThanhToan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKH;
		
		private string _TenKH;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private EntitySet<HoaDonThanhToan> _HoaDonThanhToans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public KhachHang()
		{
			this._HoaDonThanhToans = new EntitySet<HoaDonThanhToan>(new Action<HoaDonThanhToan>(this.attach_HoaDonThanhToans), new Action<HoaDonThanhToan>(this.detach_HoaDonThanhToans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(50)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(12)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDonThanhToan", Storage="_HoaDonThanhToans", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<HoaDonThanhToan> HoaDonThanhToans
		{
			get
			{
				return this._HoaDonThanhToans;
			}
			set
			{
				this._HoaDonThanhToans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDonThanhToans(HoaDonThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_HoaDonThanhToans(HoaDonThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichLamViec")]
	public partial class LichLamViec : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLLV;
		
		private string _TenLLV;
		
		private System.Nullable<System.TimeSpan> _TgBatDau;
		
		private System.Nullable<System.TimeSpan> _TgKetThuc;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLLVChanging(string value);
    partial void OnMaLLVChanged();
    partial void OnTenLLVChanging(string value);
    partial void OnTenLLVChanged();
    partial void OnTgBatDauChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTgBatDauChanged();
    partial void OnTgKetThucChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTgKetThucChanged();
    #endregion
		
		public LichLamViec()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLLV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLLV
		{
			get
			{
				return this._MaLLV;
			}
			set
			{
				if ((this._MaLLV != value))
				{
					this.OnMaLLVChanging(value);
					this.SendPropertyChanging();
					this._MaLLV = value;
					this.SendPropertyChanged("MaLLV");
					this.OnMaLLVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLLV", DbType="NVarChar(20)")]
		public string TenLLV
		{
			get
			{
				return this._TenLLV;
			}
			set
			{
				if ((this._TenLLV != value))
				{
					this.OnTenLLVChanging(value);
					this.SendPropertyChanging();
					this._TenLLV = value;
					this.SendPropertyChanged("TenLLV");
					this.OnTenLLVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TgBatDau", DbType="Time")]
		public System.Nullable<System.TimeSpan> TgBatDau
		{
			get
			{
				return this._TgBatDau;
			}
			set
			{
				if ((this._TgBatDau != value))
				{
					this.OnTgBatDauChanging(value);
					this.SendPropertyChanging();
					this._TgBatDau = value;
					this.SendPropertyChanged("TgBatDau");
					this.OnTgBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TgKetThuc", DbType="Time")]
		public System.Nullable<System.TimeSpan> TgKetThuc
		{
			get
			{
				return this._TgKetThuc;
			}
			set
			{
				if ((this._TgKetThuc != value))
				{
					this.OnTgKetThucChanging(value);
					this.SendPropertyChanging();
					this._TgKetThuc = value;
					this.SendPropertyChanged("TgKetThuc");
					this.OnTgKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LichLamViec_NhanVien", Storage="_NhanViens", ThisKey="MaLLV", OtherKey="MaLLV")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.LichLamViec = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.LichLamViec = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiNguyenLieu")]
	public partial class LoaiNguyenLieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiNL;
		
		private string _TenLoaiNL;
		
		private EntitySet<NguyenLieu> _NguyenLieus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiNLChanging(string value);
    partial void OnMaLoaiNLChanged();
    partial void OnTenLoaiNLChanging(string value);
    partial void OnTenLoaiNLChanged();
    #endregion
		
		public LoaiNguyenLieu()
		{
			this._NguyenLieus = new EntitySet<NguyenLieu>(new Action<NguyenLieu>(this.attach_NguyenLieus), new Action<NguyenLieu>(this.detach_NguyenLieus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiNL", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiNL
		{
			get
			{
				return this._MaLoaiNL;
			}
			set
			{
				if ((this._MaLoaiNL != value))
				{
					this.OnMaLoaiNLChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiNL = value;
					this.SendPropertyChanged("MaLoaiNL");
					this.OnMaLoaiNLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiNL", DbType="NVarChar(50)")]
		public string TenLoaiNL
		{
			get
			{
				return this._TenLoaiNL;
			}
			set
			{
				if ((this._TenLoaiNL != value))
				{
					this.OnTenLoaiNLChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiNL = value;
					this.SendPropertyChanged("TenLoaiNL");
					this.OnTenLoaiNLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiNguyenLieu_NguyenLieu", Storage="_NguyenLieus", ThisKey="MaLoaiNL", OtherKey="MaLoaiNL")]
		public EntitySet<NguyenLieu> NguyenLieus
		{
			get
			{
				return this._NguyenLieus;
			}
			set
			{
				this._NguyenLieus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NguyenLieus(NguyenLieu entity)
		{
			this.SendPropertyChanging();
			entity.LoaiNguyenLieu = this;
		}
		
		private void detach_NguyenLieus(NguyenLieu entity)
		{
			this.SendPropertyChanging();
			entity.LoaiNguyenLieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguyenLieu")]
	public partial class NguyenLieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNL;
		
		private string _TenNL;
		
		private string _MaLoaiNL;
		
		private EntitySet<ChiTietHoaDonCungCap> _ChiTietHoaDonCungCaps;
		
		private EntitySet<PhaChe> _PhaChes;
		
		private EntityRef<LoaiNguyenLieu> _LoaiNguyenLieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNLChanging(string value);
    partial void OnMaNLChanged();
    partial void OnTenNLChanging(string value);
    partial void OnTenNLChanged();
    partial void OnMaLoaiNLChanging(string value);
    partial void OnMaLoaiNLChanged();
    #endregion
		
		public NguyenLieu()
		{
			this._ChiTietHoaDonCungCaps = new EntitySet<ChiTietHoaDonCungCap>(new Action<ChiTietHoaDonCungCap>(this.attach_ChiTietHoaDonCungCaps), new Action<ChiTietHoaDonCungCap>(this.detach_ChiTietHoaDonCungCaps));
			this._PhaChes = new EntitySet<PhaChe>(new Action<PhaChe>(this.attach_PhaChes), new Action<PhaChe>(this.detach_PhaChes));
			this._LoaiNguyenLieu = default(EntityRef<LoaiNguyenLieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNL", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNL
		{
			get
			{
				return this._MaNL;
			}
			set
			{
				if ((this._MaNL != value))
				{
					this.OnMaNLChanging(value);
					this.SendPropertyChanging();
					this._MaNL = value;
					this.SendPropertyChanged("MaNL");
					this.OnMaNLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNL", DbType="NVarChar(50)")]
		public string TenNL
		{
			get
			{
				return this._TenNL;
			}
			set
			{
				if ((this._TenNL != value))
				{
					this.OnTenNLChanging(value);
					this.SendPropertyChanging();
					this._TenNL = value;
					this.SendPropertyChanged("TenNL");
					this.OnTenNLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiNL", DbType="Char(10)")]
		public string MaLoaiNL
		{
			get
			{
				return this._MaLoaiNL;
			}
			set
			{
				if ((this._MaLoaiNL != value))
				{
					if (this._LoaiNguyenLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiNLChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiNL = value;
					this.SendPropertyChanged("MaLoaiNL");
					this.OnMaLoaiNLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguyenLieu_ChiTietHoaDonCungCap", Storage="_ChiTietHoaDonCungCaps", ThisKey="MaNL", OtherKey="MaNL")]
		public EntitySet<ChiTietHoaDonCungCap> ChiTietHoaDonCungCaps
		{
			get
			{
				return this._ChiTietHoaDonCungCaps;
			}
			set
			{
				this._ChiTietHoaDonCungCaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguyenLieu_PhaChe", Storage="_PhaChes", ThisKey="MaNL", OtherKey="MaNL")]
		public EntitySet<PhaChe> PhaChes
		{
			get
			{
				return this._PhaChes;
			}
			set
			{
				this._PhaChes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiNguyenLieu_NguyenLieu", Storage="_LoaiNguyenLieu", ThisKey="MaLoaiNL", OtherKey="MaLoaiNL", IsForeignKey=true)]
		public LoaiNguyenLieu LoaiNguyenLieu
		{
			get
			{
				return this._LoaiNguyenLieu.Entity;
			}
			set
			{
				LoaiNguyenLieu previousValue = this._LoaiNguyenLieu.Entity;
				if (((previousValue != value) 
							|| (this._LoaiNguyenLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiNguyenLieu.Entity = null;
						previousValue.NguyenLieus.Remove(this);
					}
					this._LoaiNguyenLieu.Entity = value;
					if ((value != null))
					{
						value.NguyenLieus.Add(this);
						this._MaLoaiNL = value.MaLoaiNL;
					}
					else
					{
						this._MaLoaiNL = default(string);
					}
					this.SendPropertyChanged("LoaiNguyenLieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDonCungCaps(ChiTietHoaDonCungCap entity)
		{
			this.SendPropertyChanging();
			entity.NguyenLieu = this;
		}
		
		private void detach_ChiTietHoaDonCungCaps(ChiTietHoaDonCungCap entity)
		{
			this.SendPropertyChanging();
			entity.NguyenLieu = null;
		}
		
		private void attach_PhaChes(PhaChe entity)
		{
			this.SendPropertyChanging();
			entity.NguyenLieu = this;
		}
		
		private void detach_PhaChes(PhaChe entity)
		{
			this.SendPropertyChanging();
			entity.NguyenLieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCap")]
	public partial class NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNCC;
		
		private string _TenNCC;
		
		private EntitySet<HoaDonCungCap> _HoaDonCungCaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNCCChanging(string value);
    partial void OnMaNCCChanged();
    partial void OnTenNCCChanging(string value);
    partial void OnTenNCCChanged();
    #endregion
		
		public NhaCungCap()
		{
			this._HoaDonCungCaps = new EntitySet<HoaDonCungCap>(new Action<HoaDonCungCap>(this.attach_HoaDonCungCaps), new Action<HoaDonCungCap>(this.detach_HoaDonCungCaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNCC", DbType="NVarChar(50)")]
		public string TenNCC
		{
			get
			{
				return this._TenNCC;
			}
			set
			{
				if ((this._TenNCC != value))
				{
					this.OnTenNCCChanging(value);
					this.SendPropertyChanging();
					this._TenNCC = value;
					this.SendPropertyChanged("TenNCC");
					this.OnTenNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_HoaDonCungCap", Storage="_HoaDonCungCaps", ThisKey="MaNCC", OtherKey="MaNCC")]
		public EntitySet<HoaDonCungCap> HoaDonCungCaps
		{
			get
			{
				return this._HoaDonCungCaps;
			}
			set
			{
				this._HoaDonCungCaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDonCungCaps(HoaDonCungCap entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_HoaDonCungCaps(HoaDonCungCap entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _HoTenNV;
		
		private System.Nullable<System.DateTime> _NgSinh;
		
		private string _DiaChi;
		
		private string _Phai;
		
		private string _MaLLV;
		
		private EntitySet<HoaDonThanhToan> _HoaDonThanhToans;
		
		private EntityRef<LichLamViec> _LichLamViec;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnHoTenNVChanging(string value);
    partial void OnHoTenNVChanged();
    partial void OnNgSinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgSinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnPhaiChanging(string value);
    partial void OnPhaiChanged();
    partial void OnMaLLVChanging(string value);
    partial void OnMaLLVChanged();
    #endregion
		
		public NhanVien()
		{
			this._HoaDonThanhToans = new EntitySet<HoaDonThanhToan>(new Action<HoaDonThanhToan>(this.attach_HoaDonThanhToans), new Action<HoaDonThanhToan>(this.detach_HoaDonThanhToans));
			this._LichLamViec = default(EntityRef<LichLamViec>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenNV", DbType="NVarChar(50)")]
		public string HoTenNV
		{
			get
			{
				return this._HoTenNV;
			}
			set
			{
				if ((this._HoTenNV != value))
				{
					this.OnHoTenNVChanging(value);
					this.SendPropertyChanging();
					this._HoTenNV = value;
					this.SendPropertyChanged("HoTenNV");
					this.OnHoTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgSinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgSinh
		{
			get
			{
				return this._NgSinh;
			}
			set
			{
				if ((this._NgSinh != value))
				{
					this.OnNgSinhChanging(value);
					this.SendPropertyChanging();
					this._NgSinh = value;
					this.SendPropertyChanged("NgSinh");
					this.OnNgSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phai", DbType="NChar(5)")]
		public string Phai
		{
			get
			{
				return this._Phai;
			}
			set
			{
				if ((this._Phai != value))
				{
					this.OnPhaiChanging(value);
					this.SendPropertyChanging();
					this._Phai = value;
					this.SendPropertyChanged("Phai");
					this.OnPhaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLLV", DbType="Char(10)")]
		public string MaLLV
		{
			get
			{
				return this._MaLLV;
			}
			set
			{
				if ((this._MaLLV != value))
				{
					if (this._LichLamViec.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLLVChanging(value);
					this.SendPropertyChanging();
					this._MaLLV = value;
					this.SendPropertyChanged("MaLLV");
					this.OnMaLLVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonThanhToan", Storage="_HoaDonThanhToans", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<HoaDonThanhToan> HoaDonThanhToans
		{
			get
			{
				return this._HoaDonThanhToans;
			}
			set
			{
				this._HoaDonThanhToans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LichLamViec_NhanVien", Storage="_LichLamViec", ThisKey="MaLLV", OtherKey="MaLLV", IsForeignKey=true)]
		public LichLamViec LichLamViec
		{
			get
			{
				return this._LichLamViec.Entity;
			}
			set
			{
				LichLamViec previousValue = this._LichLamViec.Entity;
				if (((previousValue != value) 
							|| (this._LichLamViec.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LichLamViec.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._LichLamViec.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._MaLLV = value.MaLLV;
					}
					else
					{
						this._MaLLV = default(string);
					}
					this.SendPropertyChanged("LichLamViec");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDonThanhToans(HoaDonThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDonThanhToans(HoaDonThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhomThucUong")]
	public partial class NhomThucUong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNhom;
		
		private string _TenNhom;
		
		private EntitySet<ThucUong> _ThucUongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhomChanging(string value);
    partial void OnMaNhomChanged();
    partial void OnTenNhomChanging(string value);
    partial void OnTenNhomChanged();
    #endregion
		
		public NhomThucUong()
		{
			this._ThucUongs = new EntitySet<ThucUong>(new Action<ThucUong>(this.attach_ThucUongs), new Action<ThucUong>(this.detach_ThucUongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhom", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNhom
		{
			get
			{
				return this._MaNhom;
			}
			set
			{
				if ((this._MaNhom != value))
				{
					this.OnMaNhomChanging(value);
					this.SendPropertyChanging();
					this._MaNhom = value;
					this.SendPropertyChanged("MaNhom");
					this.OnMaNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhom", DbType="NVarChar(50)")]
		public string TenNhom
		{
			get
			{
				return this._TenNhom;
			}
			set
			{
				if ((this._TenNhom != value))
				{
					this.OnTenNhomChanging(value);
					this.SendPropertyChanging();
					this._TenNhom = value;
					this.SendPropertyChanged("TenNhom");
					this.OnTenNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomThucUong_ThucUong", Storage="_ThucUongs", ThisKey="MaNhom", OtherKey="MaNhom")]
		public EntitySet<ThucUong> ThucUongs
		{
			get
			{
				return this._ThucUongs;
			}
			set
			{
				this._ThucUongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThucUongs(ThucUong entity)
		{
			this.SendPropertyChanging();
			entity.NhomThucUong = this;
		}
		
		private void detach_ThucUongs(ThucUong entity)
		{
			this.SendPropertyChanging();
			entity.NhomThucUong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThucUong")]
	public partial class ThucUong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaThucUong;
		
		private string _TenThucUong;
		
		private string _MaNhom;
		
		private System.Nullable<double> _DonGia;
		
		private EntitySet<ChiTietHoaDonThanhToan> _ChiTietHoaDonThanhToans;
		
		private EntitySet<PhaChe> _PhaChes;
		
		private EntityRef<NhomThucUong> _NhomThucUong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThucUongChanging(string value);
    partial void OnMaThucUongChanged();
    partial void OnTenThucUongChanging(string value);
    partial void OnTenThucUongChanged();
    partial void OnMaNhomChanging(string value);
    partial void OnMaNhomChanged();
    partial void OnDonGiaChanging(System.Nullable<double> value);
    partial void OnDonGiaChanged();
    #endregion
		
		public ThucUong()
		{
			this._ChiTietHoaDonThanhToans = new EntitySet<ChiTietHoaDonThanhToan>(new Action<ChiTietHoaDonThanhToan>(this.attach_ChiTietHoaDonThanhToans), new Action<ChiTietHoaDonThanhToan>(this.detach_ChiTietHoaDonThanhToans));
			this._PhaChes = new EntitySet<PhaChe>(new Action<PhaChe>(this.attach_PhaChes), new Action<PhaChe>(this.detach_PhaChes));
			this._NhomThucUong = default(EntityRef<NhomThucUong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThucUong", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaThucUong
		{
			get
			{
				return this._MaThucUong;
			}
			set
			{
				if ((this._MaThucUong != value))
				{
					this.OnMaThucUongChanging(value);
					this.SendPropertyChanging();
					this._MaThucUong = value;
					this.SendPropertyChanged("MaThucUong");
					this.OnMaThucUongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThucUong", DbType="NVarChar(50)")]
		public string TenThucUong
		{
			get
			{
				return this._TenThucUong;
			}
			set
			{
				if ((this._TenThucUong != value))
				{
					this.OnTenThucUongChanging(value);
					this.SendPropertyChanging();
					this._TenThucUong = value;
					this.SendPropertyChanged("TenThucUong");
					this.OnTenThucUongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhom", DbType="Char(10)")]
		public string MaNhom
		{
			get
			{
				return this._MaNhom;
			}
			set
			{
				if ((this._MaNhom != value))
				{
					if (this._NhomThucUong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhomChanging(value);
					this.SendPropertyChanging();
					this._MaNhom = value;
					this.SendPropertyChanged("MaNhom");
					this.OnMaNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float")]
		public System.Nullable<double> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThucUong_ChiTietHoaDonThanhToan", Storage="_ChiTietHoaDonThanhToans", ThisKey="MaThucUong", OtherKey="MaThucUong")]
		public EntitySet<ChiTietHoaDonThanhToan> ChiTietHoaDonThanhToans
		{
			get
			{
				return this._ChiTietHoaDonThanhToans;
			}
			set
			{
				this._ChiTietHoaDonThanhToans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThucUong_PhaChe", Storage="_PhaChes", ThisKey="MaThucUong", OtherKey="MaThucUong")]
		public EntitySet<PhaChe> PhaChes
		{
			get
			{
				return this._PhaChes;
			}
			set
			{
				this._PhaChes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomThucUong_ThucUong", Storage="_NhomThucUong", ThisKey="MaNhom", OtherKey="MaNhom", IsForeignKey=true)]
		public NhomThucUong NhomThucUong
		{
			get
			{
				return this._NhomThucUong.Entity;
			}
			set
			{
				NhomThucUong previousValue = this._NhomThucUong.Entity;
				if (((previousValue != value) 
							|| (this._NhomThucUong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomThucUong.Entity = null;
						previousValue.ThucUongs.Remove(this);
					}
					this._NhomThucUong.Entity = value;
					if ((value != null))
					{
						value.ThucUongs.Add(this);
						this._MaNhom = value.MaNhom;
					}
					else
					{
						this._MaNhom = default(string);
					}
					this.SendPropertyChanged("NhomThucUong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDonThanhToans(ChiTietHoaDonThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.ThucUong = this;
		}
		
		private void detach_ChiTietHoaDonThanhToans(ChiTietHoaDonThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.ThucUong = null;
		}
		
		private void attach_PhaChes(PhaChe entity)
		{
			this.SendPropertyChanging();
			entity.ThucUong = this;
		}
		
		private void detach_PhaChes(PhaChe entity)
		{
			this.SendPropertyChanging();
			entity.ThucUong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhaChe")]
	public partial class PhaChe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaThucUong;
		
		private string _MaNL;
		
		private EntityRef<NguyenLieu> _NguyenLieu;
		
		private EntityRef<ThucUong> _ThucUong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThucUongChanging(string value);
    partial void OnMaThucUongChanged();
    partial void OnMaNLChanging(string value);
    partial void OnMaNLChanged();
    #endregion
		
		public PhaChe()
		{
			this._NguyenLieu = default(EntityRef<NguyenLieu>);
			this._ThucUong = default(EntityRef<ThucUong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThucUong", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaThucUong
		{
			get
			{
				return this._MaThucUong;
			}
			set
			{
				if ((this._MaThucUong != value))
				{
					if (this._ThucUong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaThucUongChanging(value);
					this.SendPropertyChanging();
					this._MaThucUong = value;
					this.SendPropertyChanged("MaThucUong");
					this.OnMaThucUongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNL", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNL
		{
			get
			{
				return this._MaNL;
			}
			set
			{
				if ((this._MaNL != value))
				{
					if (this._NguyenLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNLChanging(value);
					this.SendPropertyChanging();
					this._MaNL = value;
					this.SendPropertyChanged("MaNL");
					this.OnMaNLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguyenLieu_PhaChe", Storage="_NguyenLieu", ThisKey="MaNL", OtherKey="MaNL", IsForeignKey=true)]
		public NguyenLieu NguyenLieu
		{
			get
			{
				return this._NguyenLieu.Entity;
			}
			set
			{
				NguyenLieu previousValue = this._NguyenLieu.Entity;
				if (((previousValue != value) 
							|| (this._NguyenLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguyenLieu.Entity = null;
						previousValue.PhaChes.Remove(this);
					}
					this._NguyenLieu.Entity = value;
					if ((value != null))
					{
						value.PhaChes.Add(this);
						this._MaNL = value.MaNL;
					}
					else
					{
						this._MaNL = default(string);
					}
					this.SendPropertyChanged("NguyenLieu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThucUong_PhaChe", Storage="_ThucUong", ThisKey="MaThucUong", OtherKey="MaThucUong", IsForeignKey=true)]
		public ThucUong ThucUong
		{
			get
			{
				return this._ThucUong.Entity;
			}
			set
			{
				ThucUong previousValue = this._ThucUong.Entity;
				if (((previousValue != value) 
							|| (this._ThucUong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThucUong.Entity = null;
						previousValue.PhaChes.Remove(this);
					}
					this._ThucUong.Entity = value;
					if ((value != null))
					{
						value.PhaChes.Add(this);
						this._MaThucUong = value.MaThucUong;
					}
					else
					{
						this._MaThucUong = default(string);
					}
					this.SendPropertyChanged("ThucUong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenTK;
		
		private string _MatKhau;
		
		private string _QuanLy;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
		private EntityRef<TaiKhoan> _TaiKhoan1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenTKChanging(string value);
    partial void OnTenTKChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnQuanLyChanging(string value);
    partial void OnQuanLyChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			this._TaiKhoan1 = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTK", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenTK
		{
			get
			{
				return this._TenTK;
			}
			set
			{
				if ((this._TenTK != value))
				{
					this.OnTenTKChanging(value);
					this.SendPropertyChanging();
					this._TenTK = value;
					this.SendPropertyChanged("TenTK");
					this.OnTenTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="Char(20)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuanLy", DbType="Char(50)")]
		public string QuanLy
		{
			get
			{
				return this._QuanLy;
			}
			set
			{
				if ((this._QuanLy != value))
				{
					if (this._TaiKhoan1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuanLyChanging(value);
					this.SendPropertyChanging();
					this._QuanLy = value;
					this.SendPropertyChanged("QuanLy");
					this.OnQuanLyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_TaiKhoan", Storage="_TaiKhoans", ThisKey="TenTK", OtherKey="QuanLy")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_TaiKhoan", Storage="_TaiKhoan1", ThisKey="QuanLy", OtherKey="TenTK", IsForeignKey=true)]
		public TaiKhoan TaiKhoan1
		{
			get
			{
				return this._TaiKhoan1.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan1.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan1.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._TaiKhoan1.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._QuanLy = value.TenTK;
					}
					else
					{
						this._QuanLy = default(string);
					}
					this.SendPropertyChanged("TaiKhoan1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan1 = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan1 = null;
		}
	}
}
#pragma warning restore 1591
